# Git 的工作区

    远程仓库 - 本地仓库 - 缓存区 - 工作区

# Git 常用的命令

    项目:
      git init: 初始化
      git clone: 克隆仓库
      git config: 设置配置文件
    修改:
      git add: 添加文件
      git rm: 移除文件
      git mv: 改名, 放在缓存区
      git commit: 将代码保存缓存区
    分支:
      git branch: 分支相关的;
          -D: 删除分支
          -a: 查看本地和远程的所有分支
      git tag: 打版本号, -D push 等;
    对比差异:
      git status: 查看更改
      git log: 查看提交日志
      git blame [file]: 查看提交的人员和记录
      git diff: 查看暂存区和工作区之间的差异
                git diff --shortstat "@{0 day ago}" -> 查看今天写了多少代码
    拉取推送:
      git fetch: 下载远程仓库所有的更新
      git remove -v: 显示所有的远程仓库信息
      git pull: 拉去远程分支
      git push: 推送
                -f --force : 忽略错误, 强制提交
                -all: 提交所有的分支
    撤销:
      git checkout [file]: 放弃文件的修改; 可以跟文件, 也可以跟相对路径
      git reset [file]: 重置暂存区的文件, 使其和上次commit保持一直, 但是工作区的不变
      git reset --hard: 重置暂存区和工作区的文件, 使其和指定的commit版本一致
      git reset --keep: 重置暂存区的文件和指定的commit版本一直, 工作区保持不变
      git revert: 将代码回滚, 但是指针向后, 不会将之前的提交内容抹除掉
      git statsh: 将修改的代码放置到缓存区
      git statsh pop: 将缓存区的第一条代码同步到本地
