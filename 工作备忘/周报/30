【周报】岳鹏飞 2022/6/26

<fe@lenovocloud.com>;
xuyb@lenovocloud.com;<wangzy@lenovocloud.com>;<yuanlei@lenovocloud.com>;

本周工作内容
  1.信创2022客户端问题排查修复
  2.信创2022Web&Server二轮提测

下周工作安排
  1.支持信创2022客户端联调
  2.支持开放平台信创版本适配
  2.定位修复线上遗留问题

思考体会
  前端包管理工具
  npm v1 v2的版本: 存在依赖嵌套的问题. 不用从关系网中过滤已存在的依赖,会造成重复下载,形成依赖地狱.
  npm v3版本: 对依赖进行扁平化管理,减少了依赖嵌套关系,但是因为变更依赖层级关系,形成幽灵依赖,很容易造成依赖缺失和兼容性问题.
  npm v5版本: 有了锁的概念, 用于锁定项目所依赖的版本信息; 首次执行 npm install 的时候,会自动生成一个 package-lock.json 文件. 记录了package.json的模块依赖关系,以及子模块的依赖,并且给每个依赖标注版本信息,下载地址和验证完整性的hash值,保障了模块的兼容性和可靠性. 使每次安装的结果都相同.
  yarn1: 和npm用法基本一直. package-lock.json 和 yarn.lock区别:
    区别: 1. package-lock.json使用json格式, yarn.lock使用自定义格式
         2. package-lock.json文件记录的依赖版本都是固定的,不会出现表示范围的语义化符号(~^*). yarn.lock允许出现.
  yarn2: 推出了pnp的模式, 放弃node_modules实现零安装, 更加保证了依赖的可靠性. 安装依赖模块的速度更快,npm模块都放在缓存中,避免重复依赖和幽灵依赖等问题.
  pnpm: 安装速度快,节省磁盘空间,安全性更高. 硬链接和符号链接能有效的节省磁盘空间. 解决了npm和yarn遗留的问题, 但是存在一定的局限性和兼容性隐患.
  deno: import引入一个url,将目标地址放在url中,节省了磁盘空间和pnpm出现的局限性和兼容性问题.

其他周知事项
  无
