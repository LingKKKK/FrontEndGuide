【周报】岳鹏飞 2021/12/31

本周工作内容
    1. 修复elbe和2021部分bug
    2. Review代码
    3. 了解工单,月度补丁等相关事宜
    4. 了解strapi/rosetta-stone工程

下周工作安排
    1. 修复2021_patch6遗留的bug
    2. 梳理国际化文案平台

思考体会
    1. 存在组件使用不合理的情况, 弹窗使用 tooltip, 绑定到body节点中, 且层级过高, 无法被遮挡
       在使用组件时需要考虑场景, 使用最优的方案
    2. 在vue工程中, 存在很多直接操作dom元素的逻辑, 应当避免直接操作dom, 实在不行,可以使用vue提供的ref
       直接操作dom元素, 当项目越大，页面交互越复杂.频繁的去操作dom，会导致页面卡顿，性能差
       如何去减少dom操作是性能优化的一个关键点; 尽量贴近vue的思想
    3. 注意package.json中 ^ ~ 版本的区别
      （1）指定版本：比如"axios": "0.21.0"，表示安装0.21.0的版本;
      （2）波浪号~指定版本：比如  "core-js": "~3.6.5",
          表示安装3.6.x的最新版本（不低于3.6.5），
          但是不安装3.7.x，也就是说安装时不改变大版本号和次要版本号
      （3）^指定版本：比如 "antd": "^3.1.4",
          表示安装3.1.4及以上的版本，但是不安装4.0.0，
          也就是说安装时不改变大版本号。
       我们的项目中有一个 webpack4/umi3.5+ 不兼容的问题

其他周知事项
    无任何变动



react fiber 时间切片
vue 时间切片
贪心算法的思想


1. 前端尽量展示固定的内容, 逻辑判断交由后端
2. 存在组件使用不合理的情况, 弹窗使用 tooltip, 绑定到body节点中, 且层级过高, 无法被遮挡
在使用组件时需要考虑场景, 使用合适的组件
3. 在vue中,尽量避免直接操作dom元素, vue提供了操作dom的api: $ref

直接操作dom, 当项目越大，页面交互越复杂.频繁的去操作dom，会导致页面卡顿，性能差
如何去减少dom操作是性能优化的一个关键点

4. 对vue核心思想 mvvm 避免操作 dom元素的理解

5. package.json中 ^ ~ 版本的区别
（1）指定版本：比如"axios": "0.21.0"，表示安装0.21.0的版本;
（2）波浪号~指定版本：比如  "core-js": "~3.6.5",
    表示安装3.6.x的最新版本（不低于3.6.5），
    但是不安装3.7.x，也就是说安装时不改变大版本号和次要版本号
（3）^指定版本：比如 "antd": "^3.1.4",
    表示安装3.1.4及以上的版本，但是不安装4.0.0，
    也就是说安装时不改变大版本号。
 我们的项目中有一个 webpack4/umi3.5+ 不兼容的问题
   https://www.cnblogs.com/IwishIcould/p/14008636.html

快速对比版本之间的异同:
  1. 找到可能出错的逻辑点
  2. 先排查接口返回值是否不同
  3. 排查文件的git历史版本
